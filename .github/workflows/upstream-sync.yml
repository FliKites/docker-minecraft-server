name: 'Sync Upstream, ModifyDockerfile, DockerCI'

on:
  push:
    branches:
      - master
  schedule:
    - cron:  '0 */12 * * *'
  workflow_dispatch:
permissions:
  contents: write
jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo
    steps:
    - name: Checkout target repo
      uses: actions/checkout@v3
      with:
        ref:  master
        persist-credentials: false
    - name: Sync upstream changes
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
      with:
        target_sync_branch: master
        target_repo_token: ${{ secrets.MINECRAFT_SYNC }}
        upstream_sync_branch: master
        upstream_sync_repo: itzg/docker-minecraft-server
        test_mode: true
      
  modify_dockerfile:
    runs-on: ubuntu-latest
    needs: sync_latest_from_upstream
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Create main branch from master
      run: git checkout -b main
    - name: Modify Dockerfile
      run: |
        sed '/COPY --chmod=755 files\/auto \/auto/,$d' Dockerfile > temp_file && mv temp_file Dockerfile
        echo "COPY --chmod=755 files/auto /auto" >> Dockerfile
        echo "COPY flux_master.sh start_master_final.sh /" >> Dockerfile
        echo "RUN chmod +x /flux_master.sh /start_master_final.sh" >> Dockerfile
        echo "COPY DriveBackupV2.jar /plugins/DriveBackupV2.jar" >> Dockerfile
        echo "COPY GriefPrevention.jar /plugins/GriefPrevention.jar" >> Dockerfile
        echo "COPY Noteleks.jar /plugins/Noteleks.jar" >> Dockerfile
        echo "COPY drivebackup_config.yml /plugins/DriveBackupV2/config.yml" >> Dockerfile
        echo "COPY LuckPerms-Bukkit-5.4.98.jar /plugins/LuckPerms-Bukkit-5.4.98.jar" >> Dockerfile
        echo "COPY lp_config.yml /plugins/LuckPerms/config.yml" >> Dockerfile
        echo "COPY bukkit.yml server.properties /data" >> Dockerfile
        echo "RUN chmod 777 /data/bukkit.yml /data/server.properties" >> Dockerfile
        echo "RUN curl -fsSL -o /image/Log4jPatcher.jar https://github.com/CreeperHost/Log4jPatcher/releases/download/v1.0.1/Log4jPatcher-1.0.1.jar" >> Dockerfile
        echo "RUN dos2unix /start* /auto/*" >> Dockerfile
        # Installing curl and Node.js
        echo "RUN apt-get update && \\" >> Dockerfile
        echo "apt-get install -y curl && \\" >> Dockerfile
        echo "curl -sL https://deb.nodesource.com/setup_14.x | bash - && \\" >> Dockerfile
        echo "apt-get install -y nodejs && \\" >> Dockerfile
        echo "apt-get autoremove -y && \\" >> Dockerfile
        echo "rm -rf /var/lib/apt/lists/*" >> Dockerfile
        echo "WORKDIR /usr/src/app" >> Dockerfile
        echo "ENV DNS_SERVER_ADDRESS=https://api.cloudflare.com/client/v4 \\" >> Dockerfile
        echo "APP_NAME=Minecraft1689978172181 \\" >> Dockerfile
        echo "APP_PORT=25565 \\" >> Dockerfile
        echo "DOMAIN_NAME=minecraft.rooty.xyz \\" >> Dockerfile
        echo "ZONE_NAME=rooty.xyz \\" >> Dockerfile
        echo "FILE_PATH=/root/cluster \\" >> Dockerfile
        echo "CRON_SECONDS=900" >> Dockerfile
        echo "COPY package*.json ./" >> Dockerfile
        echo "RUN npm install" >> Dockerfile
        echo "COPY . ." >> Dockerfile
        echo "WORKDIR /data" >> Dockerfile
        # Below is the previously existing content.
        echo "ENTRYPOINT [ \"/flux_master.sh\" ]" >> Dockerfile
        echo "CMD [ \"/start_master_final.sh\" ]" >> Dockerfile
        echo "HEALTHCHECK --start-period=1m --interval=5s --retries=24 CMD mc-health" >> Dockerfile
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Modified Dockerfile using action"
    - name: Checkout flux branch
      run: git checkout flux
    - name: Merge changes from main into flux
      run: git merge main --strategy-option=theirs
    - name: Push changes to flux branch
      run: git push origin flux

  push_to_registry:
    needs: modify_dockerfile
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: flux        
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: wirewrex/minecraft-server:flux
